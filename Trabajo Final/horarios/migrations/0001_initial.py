# Generated by Django 5.2.1 on 2025-07-05 15:59

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AcademicUnit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=20, unique=True, verbose_name='Código depeartamente')),
                ('name', models.CharField(max_length=120, verbose_name='Nombre departamento')),
            ],
            options={
                'verbose_name': 'Departamento académico',
                'verbose_name_plural': 'Deparatamentos académicos',
                'ordering': ('code',),
            },
        ),
        migrations.CreateModel(
            name='Classroom',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_code', models.CharField(max_length=20, unique=True, verbose_name='Código completo')),
                ('short_code', models.CharField(max_length=10, verbose_name='Código corto')),
                ('capacity', models.PositiveIntegerField(verbose_name='Capacidad')),
                ('is_lab', models.BooleanField(default=False, verbose_name='¿Laboratorio?')),
                ('year_preference', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='Año preferente')),
            ],
            options={
                'verbose_name': 'Aula',
                'verbose_name_plural': 'Aulas',
                'ordering': ('full_code',),
            },
        ),
        migrations.CreateModel(
            name='Curriculum',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.PositiveSmallIntegerField(unique=True, verbose_name='Año de malla')),
            ],
            options={
                'verbose_name': 'Malla curricular',
                'verbose_name_plural': 'Mallas curriculares',
                'ordering': ('-year',),
            },
        ),
        migrations.CreateModel(
            name='GlobalConstraint',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reason', models.CharField(max_length=120, verbose_name='Motivo')),
                ('day', models.PositiveSmallIntegerField(choices=[(0, 'Lun'), (1, 'Mar'), (2, 'Mié'), (3, 'Jue'), (4, 'Vie')], verbose_name='Día')),
                ('start_time', models.TimeField(verbose_name='Inicio')),
                ('end_time', models.TimeField(verbose_name='Fin')),
            ],
            options={
                'verbose_name': 'Restricción global',
                'verbose_name_plural': 'Restricciones globales',
                'ordering': ('day', 'start_time'),
            },
        ),
        migrations.CreateModel(
            name='AcademicYearLevel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year_level', models.PositiveSmallIntegerField(choices=[(1, '1º año'), (2, '2º año'), (3, '3º año'), (4, '4º año'), (5, '5º año')], verbose_name='Año académico')),
                ('semester_number', models.PositiveSmallIntegerField(choices=[(1, '1.er sem.'), (2, '2.º sem.')], verbose_name='Semestre')),
            ],
            options={
                'verbose_name': 'Nivel académico',
                'verbose_name_plural': 'Niveles académicos',
                'ordering': ('year_level', 'semester_number'),
                'unique_together': {('year_level', 'semester_number')},
            },
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(db_index=True, max_length=15, verbose_name='Código')),
                ('name', models.CharField(max_length=120, verbose_name='Nombre')),
                ('credits', models.PositiveSmallIntegerField(verbose_name='Créditos')),
                ('ht', models.PositiveSmallIntegerField(default=0, verbose_name='HT')),
                ('htp', models.PositiveSmallIntegerField(default=0, verbose_name='HTP')),
                ('hp', models.PositiveSmallIntegerField(default=0, verbose_name='HP')),
                ('hs', models.PositiveSmallIntegerField(default=0, verbose_name='HS')),
                ('hl', models.PositiveSmallIntegerField(default=0, verbose_name='HL')),
                ('academic_unit', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='horarios.academicunit', verbose_name='Departamento adscrito')),
                ('curriculum', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='horarios.curriculum', verbose_name='Malla')),
            ],
            options={
                'verbose_name': 'Curso',
                'verbose_name_plural': 'Cursos',
                'ordering': ('code',),
            },
        ),
        migrations.CreateModel(
            name='CourseGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('group_code', models.CharField(max_length=2, verbose_name='Grupo')),
                ('shift', models.CharField(choices=[('M', 'Mañana'), ('T', 'Tarde'), ('A', 'Indistinto')], max_length=1, verbose_name='Turno')),
                ('capacity', models.PositiveSmallIntegerField(default=40, verbose_name='Cupo máximo')),
                ('current_enrollment', models.PositiveSmallIntegerField(default=0, verbose_name='Matrícula actual')),
                ('is_retake', models.BooleanField(default=False, verbose_name='Grupo de recuperación')),
                ('academic_year_level', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='horarios.academicyearlevel', verbose_name='Nivel académico')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='groups', to='horarios.course', verbose_name='Curso')),
            ],
            options={
                'verbose_name': 'Grupo de curso',
                'verbose_name_plural': 'Grupos de curso',
                'unique_together': {('course', 'group_code')},
            },
        ),
        migrations.CreateModel(
            name='Professor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=60, verbose_name='Nombres')),
                ('last_name', models.CharField(max_length=60, verbose_name='Apellidos')),
                ('employment_type', models.CharField(choices=[('FT', 'Tiempo completo'), ('CT', 'Contratado')], default='FT', max_length=2)),
                ('academic_unit', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='horarios.academicunit')),
                ('can_teach_courses', models.ManyToManyField(blank=True, to='horarios.course')),
            ],
        ),
        migrations.CreateModel(
            name='Availability',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day', models.CharField(choices=[('Lunes', 'Lunes'), ('Martes', 'Martes'), ('Miércoles', 'Miércoles'), ('Jueves', 'Jueves'), ('Viernes', 'Viernes')], max_length=20)),
                ('start_time', models.TimeField()),
                ('end_time', models.TimeField()),
                ('professor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='availabilities', to='horarios.professor')),
            ],
        ),
        migrations.CreateModel(
            name='Term',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.PositiveSmallIntegerField(db_index=True, verbose_name='Año')),
                ('semester', models.CharField(choices=[('A', 'A'), ('B', 'B')], max_length=1, verbose_name='Semestre')),
            ],
            options={
                'verbose_name': 'Período académico',
                'verbose_name_plural': 'Períodos académicos',
                'ordering': ('-year', '-semester'),
                'unique_together': {('year', 'semester')},
            },
        ),
        migrations.CreateModel(
            name='ScheduleVersion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('version_number', models.PositiveSmallIntegerField(default=1, verbose_name='Número de versión')),
                ('created_by', models.CharField(max_length=120, verbose_name='Creado por')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Fecha creación')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Última actualización')),
                ('state', models.CharField(choices=[('draft', 'Borrador'), ('review', 'En revisión'), ('approved', 'Aprobado'), ('final', 'Final')], default='draft', max_length=10, verbose_name='Estado')),
                ('notes', models.TextField(blank=True, verbose_name='Observaciones')),
                ('term', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='horarios.term', verbose_name='Período académico')),
            ],
            options={
                'verbose_name': 'Versión de horario',
                'verbose_name_plural': 'Versiones de horario',
                'ordering': ('-created_at',),
                'unique_together': {('term', 'version_number')},
            },
        ),
        migrations.AddField(
            model_name='course',
            name='term',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='horarios.term', verbose_name='Período'),
        ),
        migrations.CreateModel(
            name='Session',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day', models.PositiveSmallIntegerField(choices=[(0, 'Lunes'), (1, 'Martes'), (2, 'Miércoles'), (3, 'Jueves'), (4, 'Viernes')], verbose_name='Día')),
                ('start_time', models.TimeField(verbose_name='Hora inicio')),
                ('duration_blocks', models.PositiveSmallIntegerField(default=1, verbose_name='Bloques (50\u202fmin)')),
                ('session_type', models.CharField(choices=[('theory', 'Teoría'), ('htp', 'Teórico‑Práctica'), ('practice', 'Práctica'), ('lab', 'Laboratorio'), ('seminar', 'Seminario')], max_length=10, verbose_name='Tipo de sesión')),
                ('classroom', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='horarios.classroom', verbose_name='Aula')),
                ('course_group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='horarios.coursegroup', verbose_name='Grupo de curso')),
                ('professor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='horarios.professor', verbose_name='Docente')),
                ('version', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='horarios.scheduleversion', verbose_name='Versión de horario')),
            ],
            options={
                'verbose_name': 'Sesión',
                'verbose_name_plural': 'Sesiones',
                'ordering': ('day', 'start_time'),
                'unique_together': {('course_group', 'version', 'day', 'start_time')},
            },
        ),
        migrations.AlterUniqueTogether(
            name='course',
            unique_together={('curriculum', 'term', 'code')},
        ),
    ]
